import numpy as np 
from skimage import io, morphology, measure
from scipy.ndimage import convolve
import napari
from PIL import Image
import os
import glob
Image.MAX_IMAGE_PIXELS = 5000000000





parent_folder = '/full_path_to/export/' # Path to export folder generated by export_edema_experimental.groovy. 
# This folder contains subfolders with the images (Edema.png and Exo.png) that we want to tile.

def list_folders(parent_folder):
    # Use glob to find all directories in the parent folder
    folders = [f for f in glob.glob(os.path.join(parent_folder, '*')) if os.path.isdir(f)]
    return folders


def tile_image(image, output_dir, tile_size, name=''):
    # Load the image

    imagePIL = Image.fromarray((image * 255).astype(np.uint8)) #if image.dtype == np.float else Image.fromarray(image)
    image_width, image_height = imagePIL.size

    # Ensure output directory exists
    if not os.path.exists(output_dir):
        os.makedirs(output_dir)

    # Loop through and save tiles
    tile_count = 0
    for x in range(0, image_width, tile_size):
        for y in range(0, image_height, tile_size):
            # Define the box to extract the tile
            box = (x, y, x + tile_size, y + tile_size)
            tile = imagePIL.crop(box)
            
            # Save the tile
            tile_path = os.path.join(output_dir, f'{name}tile_{tile_count}.png')
            tile.save(tile_path)
            tile_count += 1

folders = list_folders(parent_folder)


## Load the images
for folder in folders:
    # check if output folder exists
    output = folder + '/tiles'
    if os.path.exists(output):
        print(f"Folder {folder} already processed")
        continue

    if not os.path.exists(folder + '/Edema.png'):
        print(f"Folder {folder} does not contain Edema.png")
        continue


    image_full = io.imread(folder + '/Edema.png', as_gray=True)
    imageexo_full = io.imread(folder + '/Exo.png', as_gray=True)

    # # Load the imagess
    tile_image(image_full, output, 10000)
    tile_image(imageexo_full, output, 10000, name='exo')



for folder in folders:
    # check if output folder exists
    output = folder + '/tiles'
    if os.path.exists(output):
        continue
    elif not os.path.exists(folder + '/Edema.png'):
        print(f"Folder {folder} does not contain Edema.png")
        continue

    else: 
        print(f"Folder {folder} needs processing")
